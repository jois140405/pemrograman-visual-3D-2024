
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author ADITYA
 */
public class mainFrame extends javax.swing.JFrame {

    /**
     * Creates new form mainFrame
     */
    private HashMap<String, Boolean> statusPembayaran;
    private StringBuilder paymentHistory;
    public String status ="";
    private String bulanBelumLunas="";

    private final String[] bulanList = {
    "Januari", "Februari", "Maret", "April", "Mei", "Juni",
    "Juli", "Agustus", "September", "Oktober", "November", "Desember"
};
    StringBuilder selectedMonthsText = new StringBuilder();
    
    private String bulanBayar ="";
    public mainFrame() {
        initComponents();
        setLocationRelativeTo(null);
        
        statusPembayaran = new HashMap<>();
        paymentHistory = new StringBuilder();
        for (String bulan : bulanList) {
        statusPembayaran.put(bulan, false);
        
        colRiwayat.setColumns(20);
        colRiwayat.setRows(5);
        
        String namaAnggota = colNama.getText();
        int idAnggota = colomId.getSelectedIndex();

    }
        
    }
    ImageIcon iconSukses = new javax.swing.ImageIcon(getClass().getResource("sukses.png"));
    ImageIcon iconGagal = new javax.swing.ImageIcon(getClass().getResource("gagal.png"));
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        panel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        panelBio = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        colNama = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        colomId = new javax.swing.JComboBox<>();
        colTotal = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnCal = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        colPay = new javax.swing.JTextField();
        btnPay = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        colRiwayat = new javax.swing.JTextArea();
        btnHistory = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        january = new javax.swing.JCheckBox();
        february = new javax.swing.JCheckBox();
        march = new javax.swing.JCheckBox();
        april = new javax.swing.JCheckBox();
        may = new javax.swing.JCheckBox();
        june = new javax.swing.JCheckBox();
        july = new javax.swing.JCheckBox();
        august = new javax.swing.JCheckBox();
        september = new javax.swing.JCheckBox();
        october = new javax.swing.JCheckBox();
        november = new javax.swing.JCheckBox();
        december = new javax.swing.JCheckBox();
        btnReset = new javax.swing.JButton();

        jPanel1.setLayout(new java.awt.BorderLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(690, 500));
        setPreferredSize(new java.awt.Dimension(690, 500));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setPreferredSize(new java.awt.Dimension(690, 500));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel.setBackground(new java.awt.Color(0, 0, 0));
        panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inter miami.png"))); // NOI18N
        panel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 150, 130));

        jLabel3.setFont(new java.awt.Font("Poppins ExtraBold", 1, 48)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(254, 222, 251));
        jLabel3.setText("Inter Miami");
        panel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, -1, 40));

        panelBio.setBackground(new java.awt.Color(0, 0, 0));
        panelBio.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(237, 188, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Posisi tim    :");
        panelBio.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, -1, 30));

        jLabel7.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(237, 188, 0));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Nama           :");
        panelBio.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, 30));

        colNama.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        colNama.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        colNama.setText("Isi nama anda!");
        colNama.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                colNamaFocusGained(evt);
            }
        });
        colNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colNamaActionPerformed(evt);
            }
        });
        panelBio.add(colNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 220, 30));

        jLabel8.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(237, 188, 0));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Data");
        panelBio.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 20));

        colomId.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih posisi tim!", "Utama", "Kedua" }));
        colomId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colomIdActionPerformed(evt);
            }
        });
        panelBio.add(colomId, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 220, -1));

        panel.add(panelBio, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 310, 120));

        colTotal.setEditable(false);
        colTotal.setFont(new java.awt.Font("Poppins", 1, 10)); // NOI18N
        colTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        panel.add(colTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 350, 130, 30));

        jLabel6.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(237, 188, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Total Bayar  :");
        panel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 390, 90, 30));

        btnCal.setBackground(new java.awt.Color(254, 222, 251));
        btnCal.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        btnCal.setText("Hitung");
        btnCal.setBorder(null);
        btnCal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalActionPerformed(evt);
            }
        });
        panel.add(btnCal, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 350, 90, 30));

        jLabel12.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(237, 188, 0));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Total Biaya  :");
        panel.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 350, 80, 30));

        colPay.setFont(new java.awt.Font("Poppins", 1, 10)); // NOI18N
        colPay.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        panel.add(colPay, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 390, 130, 30));

        btnPay.setBackground(new java.awt.Color(254, 222, 251));
        btnPay.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        btnPay.setText("Bayar");
        btnPay.setBorder(null);
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });
        panel.add(btnPay, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 390, 90, 30));

        jPanel2.add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 345, 550));

        colRiwayat.setEditable(false);
        colRiwayat.setBackground(new java.awt.Color(254, 222, 251));
        colRiwayat.setColumns(20);
        colRiwayat.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        colRiwayat.setLineWrap(true);
        colRiwayat.setRows(5);
        colRiwayat.setWrapStyleWord(true);
        colRiwayat.setBorder(null);
        jScrollPane1.setViewportView(colRiwayat);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 210, 320, 210));

        btnHistory.setBackground(new java.awt.Color(254, 222, 251));
        btnHistory.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        btnHistory.setText("Simpan");
        btnHistory.setBorder(null);
        btnHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistoryActionPerformed(evt);
            }
        });
        jPanel2.add(btnHistory, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 430, 70, 30));

        jLabel9.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(237, 188, 0));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Bayar tiap bulan :");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, -1, 20));

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setLayout(new java.awt.GridLayout(4, 3));

        january.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        january.setForeground(new java.awt.Color(255, 255, 255));
        january.setText("Januari");
        january.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/validation.png"))); // NOI18N
        january.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                januaryActionPerformed(evt);
            }
        });
        jPanel3.add(january);

        february.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        february.setForeground(new java.awt.Color(255, 255, 255));
        february.setText("Februari");
        february.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/validation.png"))); // NOI18N
        jPanel3.add(february);

        march.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        march.setForeground(new java.awt.Color(255, 255, 255));
        march.setText("Maret");
        march.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/validation.png"))); // NOI18N
        jPanel3.add(march);

        april.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        april.setForeground(new java.awt.Color(255, 255, 255));
        april.setText("April");
        april.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/validation.png"))); // NOI18N
        jPanel3.add(april);

        may.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        may.setForeground(new java.awt.Color(255, 255, 255));
        may.setText("Mei");
        may.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/validation.png"))); // NOI18N
        jPanel3.add(may);

        june.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        june.setForeground(new java.awt.Color(255, 255, 255));
        june.setText("Juni");
        june.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/validation.png"))); // NOI18N
        june.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                juneActionPerformed(evt);
            }
        });
        jPanel3.add(june);

        july.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        july.setForeground(new java.awt.Color(255, 255, 255));
        july.setText("Juli");
        july.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/validation.png"))); // NOI18N
        jPanel3.add(july);

        august.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        august.setForeground(new java.awt.Color(255, 255, 255));
        august.setText("Agustus");
        august.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/validation.png"))); // NOI18N
        jPanel3.add(august);

        september.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        september.setForeground(new java.awt.Color(255, 255, 255));
        september.setText("September");
        september.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/validation.png"))); // NOI18N
        jPanel3.add(september);

        october.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        october.setForeground(new java.awt.Color(255, 255, 255));
        october.setText("Oktober");
        october.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/validation.png"))); // NOI18N
        jPanel3.add(october);

        november.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        november.setForeground(new java.awt.Color(255, 255, 255));
        november.setText("November");
        november.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/validation.png"))); // NOI18N
        jPanel3.add(november);

        december.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        december.setForeground(new java.awt.Color(255, 255, 255));
        december.setText("Desember");
        december.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/validation.png"))); // NOI18N
        jPanel3.add(december);

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, 320, 140));

        btnReset.setBackground(new java.awt.Color(254, 222, 251));
        btnReset.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        btnReset.setText("Reset");
        btnReset.setBorder(null);
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        jPanel2.add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 430, 90, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 870, 580));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void colNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_colNamaActionPerformed
     String sudahBayar="";
    private void btnCalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalActionPerformed
        try {
        String Takenama = colNama.getText();
        int takeID = colomId.getSelectedIndex(); // Mengambil indeks yang dipilih dari JComboBox
        
        // Memeriksa apakah nama kosong atau ID tidak valid, serta memvalidasi input nama hanya mengandung huruf dan spasi
        if (Takenama.isEmpty() || takeID == 0 || Takenama.equals("Enter your ID here kiddos !") || !Takenama.matches("[a-zA-Z\\s]+")) {
            JOptionPane.showMessageDialog(this, "Input Biodata yang anda masukkan tidak valid !!!!", "Input tidak valid !!!", JOptionPane.WARNING_MESSAGE, iconGagal);
            colNama.setText(""); // Mengosongkan kolom nama
            colomId.setSelectedIndex(0); // Mengatur ulang pilihan JComboBox ke posisi awal
            
            // Mengatur semua checkbox bulan menjadi tidak terpilih
            january.setSelected(false);
            february.setSelected(false);
            march.setSelected(false);
            april.setSelected(false);
            may.setSelected(false);
            june.setSelected(false);
            july.setSelected(false);
            august.setSelected(false);
            september.setSelected(false);
            october.setSelected(false);
            november.setSelected(false);
            december.setSelected(false);
        } else {
            // Jika input valid, lanjutkan dengan proses pembayaran
            int sppBulanan = 1000000;
            List<String> selectedMonths = new ArrayList<>();
            int totalTagihan = 0;

            // Memeriksa bulan yang dipilih dan menghitung total tagihan
            if (january.isSelected()) {
                selectedMonths.add("Januari");
                totalTagihan += sppBulanan;
                statusPembayaran.put("Januari", true);
            }
            if (february.isSelected()) {
                selectedMonths.add("Februari");
                totalTagihan += sppBulanan;
                statusPembayaran.put("Februari", true);
            }
            if (march.isSelected()) {
                selectedMonths.add("Maret");
                totalTagihan += sppBulanan;
                statusPembayaran.put("Maret", true);
            }
            if (april.isSelected()) {
                selectedMonths.add("April");
                totalTagihan += sppBulanan;
                statusPembayaran.put("April", true);
            }
            if (may.isSelected()) {
                selectedMonths.add("Mei");
                totalTagihan += sppBulanan;
                statusPembayaran.put("Mei", true);
            }
            if (june.isSelected()) {
                selectedMonths.add("Juni");
                totalTagihan += sppBulanan;
                statusPembayaran.put("Juni", true);
            }
            if (july.isSelected()) {
                selectedMonths.add("Juli");
                totalTagihan += sppBulanan;
                statusPembayaran.put("Juli", true);
            }
            if (august.isSelected()) {
                selectedMonths.add("Agustus");
                totalTagihan += sppBulanan;
                statusPembayaran.put("Agustus", true);
            }
            if (september.isSelected()) {
                selectedMonths.add("September");
                totalTagihan += sppBulanan;
                statusPembayaran.put("September", true);
            }
            if (october.isSelected()) {
                selectedMonths.add("Oktober");
                totalTagihan += sppBulanan;
                statusPembayaran.put("Oktober", true);
            }
            if (november.isSelected()) {
                selectedMonths.add("November");
                totalTagihan += sppBulanan;
                statusPembayaran.put("November", true);
            }
            if (december.isSelected()) {
                selectedMonths.add("Desember");
                totalTagihan += sppBulanan;
                statusPembayaran.put("Desember", true);
            }
            
            // Menampilkan informasi bulan yang dipilih dan total tagihan
            if (!selectedMonths.isEmpty()) {
                StringBuilder selectedMonthsText = new StringBuilder();
                for (int i = 0; i < selectedMonths.size(); i++) {
                    selectedMonthsText.append(selectedMonths.get(i));
                    if (i != selectedMonths.size() - 1) {
                        selectedMonthsText.append(", ");
                    }
                }
                
                colTotal.setText(String.valueOf(totalTagihan));
                colRiwayat.setText("Pembayaran untuk bulan : \n\n" + selectedMonthsText);
            } else {
                JOptionPane.showMessageDialog(this, "Pilih bulan yang ingin Anda bayar !!!!", "Input tidak valid!", JOptionPane.WARNING_MESSAGE, iconGagal);
            }
        }
    } catch (NumberFormatException ex) {
        ex.printStackTrace();
    }


//        
//        try{
//            String Takenama = colNama.getText();
//            int takeID = colomId.getSelectedIndex();
//            
//            if(Takenama.isEmpty()||takeID.isEmpty()||takeID.equals("Enter your ID here kiddos !")|| !Takenama.matches("[a-zA-Z\\s]+")){
//                JOptionPane.showMessageDialog(this, "Input Biodata yang anda masukkan tidak valid !!!!" ,"Input tidak valid !!!", JOptionPane.WARNING_MESSAGE,iconGagal);
//                colNama.setText("");
//                colomId.setSelectedIndex(0);
//                
//                january.setSelected(false);
//                february.setSelected(false);
//                march.setSelected(false);
//                april.setSelected(false);
//                may.setSelected(false);
//                june.setSelected(false);
//                july.setSelected(false);
//                august.setSelected(false);
//                september.setSelected(false);
//                october.setSelected(false);
//                november.setSelected(false);
//                december.setSelected(false);
//            }
//        }catch(NumberFormatException ex){
//            
//        }
//
//        try{
//            int sppBulanan = 1000000;
//            List<String> selectedMonths = new ArrayList<>();
//            int totalTagihan = 0;
//
//            if (january.isSelected()){
//                selectedMonths.add("Januari");
//                totalTagihan +=sppBulanan;
//                statusPembayaran.put("Januari", true);
//            }if (february.isSelected()){
//                selectedMonths.add("Februari");
//                totalTagihan +=sppBulanan;
//                statusPembayaran.put("Februari", true);
//            }if (march.isSelected()){
//                selectedMonths.add("Maret");
//                totalTagihan +=sppBulanan;
//                statusPembayaran.put("Maret", true);
//            }if (april.isSelected()){
//                selectedMonths.add("April");
//                totalTagihan +=sppBulanan;
//                statusPembayaran.put("April", true);
//            }if (may.isSelected()){
//                selectedMonths.add("Mei");
//                totalTagihan +=sppBulanan;
//                statusPembayaran.put("Mei", true);
//            }if (june.isSelected()){
//                selectedMonths.add("Juni");
//                totalTagihan +=sppBulanan;
//                statusPembayaran.put("Juni", true);
//            }if (july.isSelected()){
//                selectedMonths.add("Juli");
//                totalTagihan +=sppBulanan;
//                statusPembayaran.put("Juli", true);
//            }if (august.isSelected()){
//                selectedMonths.add("Agustus");
//                totalTagihan +=sppBulanan;
//                statusPembayaran.put("Agustus", true);
//            }if (september.isSelected()){
//                selectedMonths.add("September");
//                totalTagihan +=sppBulanan;
//                statusPembayaran.put("September", true);
//            }if (october.isSelected()){
//                selectedMonths.add("Oktober");
//                totalTagihan +=sppBulanan;
//                statusPembayaran.put("Oktober", true);
//            }if (november.isSelected()){
//                selectedMonths.add("November");
//                totalTagihan +=sppBulanan;
//                statusPembayaran.put("November", true);
//            }if (december.isSelected()){
//                selectedMonths.add("Desember");
//                totalTagihan +=sppBulanan;
//                statusPembayaran.put("Desember", true);
//            }
//            
//             if (!selectedMonths.isEmpty()) {
//            StringBuilder selectedMonthsText = new StringBuilder();
//            for (int i = 0; i < selectedMonths.size(); i++) {
//                selectedMonthsText.append(selectedMonths.get(i));
//                if (i != selectedMonths.size() - 1) {
//                    selectedMonthsText.append(", ");
//                }
//            }
//            
//            colTotal.setText("" + totalTagihan);
//            colRiwayat.setText("pembayaran untuk bulan : \n\n"+selectedMonthsText);
//            
//        }if (selectedMonths.isEmpty()){
//            System.out.println("pilih dulu");
//            JOptionPane.showMessageDialog(this, "Pilih bulan yang ingin anda bayar !!!!" ,"Input tidak valid!", JOptionPane.WARNING_MESSAGE,iconGagal);
//        }
//
//        }catch(NumberFormatException ex){
//            
//        }
    }//GEN-LAST:event_btnCalActionPerformed
        
    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
        try{
            
            String nama = colNama.getText();
            int ID = colomId.getSelectedIndex();
            int totalDebtSPP = Integer.parseInt(colTotal.getText());
            int bayar = Integer.parseInt(colPay.getText());
            int kembali = bayar - totalDebtSPP;

            if (kembali >=0){
                   JOptionPane.showMessageDialog(this, "Selamat Sudah Membayar SPP Anda! : Rp. "+totalDebtSPP, "Pembayaran Berhasil!", JOptionPane.INFORMATION_MESSAGE,iconSukses);
                
                   colRiwayat.append("\n\nPembayaran Berhasil!");
                   colRiwayat.append("\nDetail Pembayaran :\n"
                   +"Nama : "+nama+"\nID : "+ID+
                           "\nTotal Tagihan : "+totalDebtSPP+
                           "\nTotal Bayar :"+bayar+"\nKembalian : "+
                           kembali);
            
            cekStatusPembayaran();
            btnPay.setText("");
            colTotal.setText("");
            totalDebtSPP = 0;
            bayar = 0;
            kembali = 0;
            
            if(january.isSelected()){
                january.setSelected(false);
                january.setEnabled(false);
                january.setText("Paid");
            }if(february.isSelected()){
                february.setSelected(false);
                february.setEnabled(false);
                february.setText("Paid");
            }if(march.isSelected()){
                march.setSelected(false);
                march.setEnabled(false);
                march.setText("Paid");
            }if(april.isSelected()){
                april.setSelected(false);
                april.setEnabled(false);
                april.setText("Paid");
            }if(may.isSelected()){
                may.setSelected(false);
                may.setEnabled(false);
                may.setText("Paid");
            }if(june.isSelected()){
                june.setSelected(false);
                june.setEnabled(false);
                june.setText("Paid");
            }if(july.isSelected()){
                july.setSelected(false);
                july.setEnabled(false);
                july.setText("Paid");
            }if(august.isSelected()){
                august.setSelected(false);
                august.setEnabled(false);
                august.setText("Paid");
            }if(september.isSelected()){
                september.setSelected(false);
                september.setEnabled(false);
                september.setText("Paid");
            }if(october.isSelected()){
                october.setSelected(false);
                october.setEnabled(false);
                october.setText("Paid");
            }if(november.isSelected()){
                november.setSelected(false);
                november.setEnabled(false);
                november.setText("Paid");
            }if(december.isSelected()){
                december.setSelected(false);
                december.setEnabled(false);
                december.setText("Paid");
            }
                    
                    
        }else if(kembali<0){
            JOptionPane.showMessageDialog(this, "Uang yang dibayar kurang.", "Uang Kurang", JOptionPane.WARNING_MESSAGE);
            btnPay.setText("");
                    return;
        }else{
            System.out.println("cihuyyy");
        }
        }catch(NumberFormatException e){
             JOptionPane.showMessageDialog(this, "Input tidak valid!", "Yang bener lah inputnya", JOptionPane.WARNING_MESSAGE);
             colPay.setText("");
        }
        
    }//GEN-LAST:event_btnPayActionPerformed

    private void colNamaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_colNamaFocusGained
        // TODO add your handling code here:
        colNama.setText("");
    }//GEN-LAST:event_colNamaFocusGained

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        for (String bulan : bulanList) {
        statusPembayaran.put(bulan, false); 
    }
                january.setEnabled(true);
                february.setEnabled(true);
                march.setEnabled(true);     
                april.setEnabled(true);     
                may.setEnabled(true);       
                june.setEnabled(true);      
                july.setEnabled(true);      
                august.setEnabled(true);    
                september.setEnabled(true); 
                october.setEnabled(true);   
                november.setEnabled(true); 
                december.setEnabled(true);
                
                january.setSelected(false);
                february.setSelected(false);
                march.setSelected(false);
                april.setSelected(false);
                may.setSelected(false);
                june.setSelected(false);
                july.setSelected(false);
                august.setSelected(false);
                september.setSelected(false);
                october.setSelected(false);
                november.setSelected(false);
                december.setSelected(false);
                
                january.setText("Januari");
                february.setText("Februari");
                march.setText("Maret");
                april.setText("April");
                may.setText("Mei");
                june.setText("Juni");
                july.setText("Juli");
                august.setText("Agustus");
                september.setText("September");
                october.setText("Oktober");
                november.setText("November");
                december.setText("Desember");
                
                colNama.setText("");
                colomId.setSelectedIndex(0);
                colTotal.setText("");
                colRiwayat.setText("");           
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistoryActionPerformed
        // TODO add your handling code here:
        String nama1 = colNama.getText();
        int ID1 = colomId.getSelectedIndex();
        frameRiwayat riwayat = new frameRiwayat(nama1,ID1,status,bulanBelumLunas);
        riwayat.setVisible(true);   
    }//GEN-LAST:event_btnHistoryActionPerformed

    private void januaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_januaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_januaryActionPerformed

    private void juneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_juneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_juneActionPerformed

    private void colomIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colomIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_colomIdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox april;
    private javax.swing.JCheckBox august;
    private javax.swing.JButton btnCal;
    private javax.swing.JButton btnHistory;
    private javax.swing.JButton btnPay;
    private javax.swing.JButton btnReset;
    private javax.swing.JTextField colNama;
    private javax.swing.JTextField colPay;
    private javax.swing.JTextArea colRiwayat;
    private javax.swing.JTextField colTotal;
    private javax.swing.JComboBox<String> colomId;
    private javax.swing.JCheckBox december;
    private javax.swing.JCheckBox february;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox january;
    private javax.swing.JCheckBox july;
    private javax.swing.JCheckBox june;
    private javax.swing.JCheckBox march;
    private javax.swing.JCheckBox may;
    private javax.swing.JCheckBox november;
    private javax.swing.JCheckBox october;
    private javax.swing.JPanel panel;
    private javax.swing.JPanel panelBio;
    private javax.swing.JCheckBox september;
    // End of variables declaration//GEN-END:variables

    private void cekStatusPembayaran() {
        List<String> unpaidMonths = new ArrayList<>();
        
        
    for (String bulan : bulanList) {
        if (!statusPembayaran.get(bulan)) {
            unpaidMonths.add(bulan);
            
        }
    }

    if (unpaidMonths.isEmpty()) {
        colRiwayat.append("\n\nSemua bulan sudah lunas!\n\n");
        status = "lunas";
        
        if(status== "lunas"){
            bulanBelumLunas="Selamat sudah membayar semua tagihan.";
        }
    } else {
        StringBuilder unpaidMonthsText = new StringBuilder();
        for (int i = 0; i < unpaidMonths.size(); i++) {
            unpaidMonthsText.append(unpaidMonths.get(i));
            if (i != unpaidMonths.size() - 1) {
                unpaidMonthsText.append(", ");
            }
        }
        colRiwayat.append("\nBelum Bayar : \n" + unpaidMonthsText.toString() + "\n\n");
        status = "Menunggak";
        bulanBelumLunas = unpaidMonthsText.toString();
    }
}

}


